// <auto-generated />
using System;
using Desafio_TicTacToe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Desafio_TicTacToe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Desafio_TicTacToe.Models.JogadaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Jogador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LogModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Posicao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogModelId");

                    b.ToTable("Jogadas");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.JogadorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LogModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PartidaModelId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogModelId");

                    b.HasIndex("PartidaModelId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.LogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraPartida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Vencedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.PartidaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraPartida")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.JogadaModel", b =>
                {
                    b.HasOne("Desafio_TicTacToe.Models.LogModel", null)
                        .WithMany("Log")
                        .HasForeignKey("LogModelId");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.JogadorModel", b =>
                {
                    b.HasOne("Desafio_TicTacToe.Models.LogModel", null)
                        .WithMany("Jogadores")
                        .HasForeignKey("LogModelId");

                    b.HasOne("Desafio_TicTacToe.Models.PartidaModel", null)
                        .WithMany("Jogadores")
                        .HasForeignKey("PartidaModelId");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.LogModel", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("Log");
                });

            modelBuilder.Entity("Desafio_TicTacToe.Models.PartidaModel", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
